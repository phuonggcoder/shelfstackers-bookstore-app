// Debug logic cho ShipperRatingCard component
console.log('üîç Debug ShipperRatingCard Logic...\n');

// D·ªØ li·ªáu m·∫´u t·ª´ h√¨nh ·∫£nh
const orderData = {
  status: 'Delivered', // ho·∫∑c 'delivered'
  assigned_shipper_id: null, // ho·∫∑c c√≥ gi√° tr·ªã
  assigned_shipper_name: null, // ho·∫∑c c√≥ gi√° tr·ªã
  assigned_shipper_phone: null // ho·∫∑c c√≥ gi√° tr·ªã
};

console.log('üìä D·ªØ li·ªáu ƒë∆°n h√†ng:');
console.log('Status:', orderData.status);
console.log('Assigned Shipper ID:', orderData.assigned_shipper_id);
console.log('Assigned Shipper Name:', orderData.assigned_shipper_name);
console.log('Assigned Shipper Phone:', orderData.assigned_shipper_phone);

// Ki·ªÉm tra ƒëi·ªÅu ki·ªán hi·ªÉn th·ªã
console.log('\nüîç Ki·ªÉm tra ƒëi·ªÅu ki·ªán hi·ªÉn th·ªã:');

const isDelivered = orderData.status?.toLowerCase() === 'delivered';
const hasShipper = !!orderData.assigned_shipper_id;

console.log('‚úÖ Order is delivered:', isDelivered);
console.log('‚úÖ Has assigned shipper:', hasShipper);
console.log('‚úÖ Should show ShipperRatingCard:', isDelivered && hasShipper);

if (!isDelivered) {
  console.log('‚ùå Order status is not "delivered"');
  console.log('üí° C·∫ßn ƒë·∫£m b·∫£o order.status === "delivered" ho·∫∑c "Delivered"');
}

if (!hasShipper) {
  console.log('‚ùå No assigned shipper');
  console.log('üí° C·∫ßn g√°n shipper cho ƒë∆°n h√†ng (assigned_shipper_id)');
}

console.log('\nüéØ K·∫øt lu·∫≠n:');
if (isDelivered && hasShipper) {
  console.log('‚úÖ ShipperRatingCard s·∫Ω hi·ªÉn th·ªã');
} else {
  console.log('‚ùå ShipperRatingCard s·∫Ω KH√îNG hi·ªÉn th·ªã');
  console.log('üí° ƒê·ªÉ hi·ªÉn th·ªã, c·∫ßn:');
  console.log('   1. Order status = "delivered"');
  console.log('   2. C√≥ assigned_shipper_id');
}

// Test v·ªõi c√°c tr∆∞·ªùng h·ª£p kh√°c nhau
console.log('\nüß™ Test c√°c tr∆∞·ªùng h·ª£p:');

const testCases = [
  { status: 'Delivered', shipperId: 'shipper123', expected: true },
  { status: 'delivered', shipperId: 'shipper123', expected: true },
  { status: 'Delivered', shipperId: null, expected: false },
  { status: 'Shipped', shipperId: 'shipper123', expected: false },
  { status: 'Pending', shipperId: 'shipper123', expected: false },
];

testCases.forEach((testCase, index) => {
  const shouldShow = testCase.status.toLowerCase() === 'delivered' && !!testCase.shipperId;
  console.log(`Case ${index + 1}: Status="${testCase.status}", Shipper="${testCase.shipperId}" -> ${shouldShow ? '‚úÖ SHOW' : '‚ùå HIDE'} (Expected: ${testCase.expected ? 'SHOW' : 'HIDE'})`);
});
